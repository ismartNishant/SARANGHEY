{"ast":null,"code":"var _jsxFileName = \"/home/nishant/AVscode/Git/Saranghey/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport './components/css/component.css';\nimport Navbar from './components/header';\nimport Footer from './components/footer';\nimport TopSlider from './components/topSlider';\nimport SupriceItem from './components/supriceContent'; // import Gallery2 from './components/Gallery2';\n\nimport SpecialItem from './components/specialContent';\nimport Newsletter from './components/newsletter';\nimport { useState, useEffect } from 'react';\nimport ContactUs from './components/ContactUs';\nimport Tour from './components/Tour';\nimport Gallery1 from './components/Gallery1';\nimport AboutUs from './components/AboutUs';\nimport Service from './components/Service';\nimport ScrollToTop from './components/ScrollToTopAuto';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport GoTop from './components/GoTopOnclick';\nimport LoadingBar from 'react-top-loading-bar';\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const[progress,setProgress] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [mode, setMode] = useState('dark');\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 4000);\n  }, []);\n\n  const toggleMode = () => {\n    if (mode === 'dark') {\n      setMode('white');\n      document.body.style.backgroundColor = '#fff';\n    } else {\n      setMode('dark');\n      document.body.style.backgroundColor = '#000';\n    }\n  };\n\n  let forColor = mode === 'dark' ? '#fff' : '#000';\n  let forBg = mode === 'dark' ? '#000' : '#fff';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(ClimbingBoxLoader, {\n      color: \"#6666\",\n      loading: loading,\n      size: 310\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"say\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"VReE8C/UBAjEF6JCIsTf+RbD2dQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nishant/AVscode/Git/Saranghey/src/App.js"],"names":["Navbar","Footer","TopSlider","SupriceItem","SpecialItem","Newsletter","useState","useEffect","ContactUs","Tour","Gallery1","AboutUs","Service","ScrollToTop","BrowserRouter","Router","Routes","Route","GoTop","LoadingBar","ClimbingBoxLoader","App","loading","setLoading","mode","setMode","setTimeout","toggleMode","document","body","style","backgroundColor","forColor","forBg"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAO,gCAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;AAKA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBjB,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,MAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAK;AACbgB,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAG,IAAAA,UAAU,CAAC,MAAK;AACfH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAFS,EAER,IAFQ,CAAV;AAGD,GANQ,EAMP,EANO,CAAT;;AAQA,QAAMI,UAAU,GAAG,MAAM;AACvB,QAAIH,IAAI,KAAK,MAAb,EAAqB;AACnBC,MAAAA,OAAO,CAAC,OAAD,CAAP;AACAG,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,MAAtC;AACD,KAHD,MAIK;AACHN,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAG,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,MAAtC;AACD;AACF,GATD;;AAUA,MAAIC,QAAQ,GAAGR,IAAI,KAAK,MAAT,GAAkB,MAAlB,GAA2B,MAA1C;AACA,MAAIS,KAAK,GAAGT,IAAI,KAAK,MAAT,GAAkB,MAAlB,GAA2B,MAAvC;AAEA,sBACE;AAAA,cACIF,OAAO,gBAAI,QAAC,iBAAD;AAAmB,MAAA,KAAK,EAAE,OAA1B;AAAmC,MAAA,OAAO,EAAEA,OAA5C;AAAsD,MAAA,IAAI,EAAE;AAA5D;AAAA;AAAA;AAAA;AAAA,YAAJ,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhCD;;GAAMD,G;;KAAAA,G;AAkCN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport './components/css/component.css';\nimport Navbar from './components/header';\nimport Footer from './components/footer';\nimport TopSlider from './components/topSlider';\nimport SupriceItem from './components/supriceContent';\n// import Gallery2 from './components/Gallery2';\nimport SpecialItem from './components/specialContent';\nimport Newsletter from './components/newsletter';\nimport { useState,useEffect } from 'react';\nimport ContactUs from './components/ContactUs';\nimport Tour from './components/Tour';\nimport Gallery1 from './components/Gallery1';\nimport AboutUs from './components/AboutUs';\nimport Service from './components/Service';\nimport ScrollToTop from './components/ScrollToTopAuto';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport GoTop from './components/GoTopOnclick';\nimport LoadingBar from 'react-top-loading-bar';\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\n\nconst App = () => {\n  // const[progress,setProgress] = useState(0);\n  const [loading,setLoading] = useState(false);\n  const [mode, setMode] = useState('dark');\n  useEffect(() =>{\n    setLoading(true);\n\n    setTimeout(() =>{\n     setLoading(false);\n    },4000)\n  },[])\n  \n  const toggleMode = () => {\n    if (mode === 'dark') {\n      setMode('white');\n      document.body.style.backgroundColor = '#fff';\n    }\n    else {\n      setMode('dark');\n      document.body.style.backgroundColor = '#000';\n    }\n  }\n  let forColor = mode === 'dark' ? '#fff' : '#000';\n  let forBg = mode === 'dark' ? '#000' : '#fff';\n\n  return (\n    <div>\n      { loading ? (<ClimbingBoxLoader color={\"#6666\"} loading={loading}  size={310} />) \n      :(<h1>say</h1>)}\n    \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}