{"ast":null,"code":"var _jsxFileName = \"/home/nishant/AVscode/Git/Saranghey/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport './components/css/component.css';\nimport Navbar from './components/header';\nimport Footer from './components/footer';\nimport TopSlider from './components/topSlider';\nimport SupriceItem from './components/supriceContent'; // import Gallery2 from './components/Gallery2';\n\nimport SpecialItem from './components/specialContent';\nimport Newsletter from './components/newsletter';\nimport { useState, useEffect } from 'react';\nimport ContactUs from './components/ContactUs';\nimport Tour from './components/Tour';\nimport Gallery1 from './components/Gallery1';\nimport AboutUs from './components/AboutUs';\nimport Service from './components/Service';\nimport ScrollToTop from './components/ScrollToTopAuto';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport GoTop from './components/GoTopOnclick';\nimport LoadingBar from 'react-top-loading-bar';\nimport HashLoader from \"react-spinners/HashLoader\";\nimport { css } from \"@emotion/react\"; // Can be a string as well. Need to ensure each key-value pair ends with ;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  justify-content: center;\n  position:relative;\n  top:20rem;\n`;\n\nconst App = () => {\n  _s();\n\n  // const[progress,setProgress] = useState(0);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 6000);\n  }, []);\n  let [color, setColor] = useState(\"#ffffff\");\n  {\n    loading ? setColor(\"#000\") : setColor(\"#fff\");\n  }\n  const [mode, setMode] = useState('dark');\n\n  const toggleMode = () => {\n    if (mode === 'dark') {\n      setMode('white');\n      document.body.style.backgroundColor = '#fff';\n    } else {\n      setMode('dark');\n      document.body.style.backgroundColor = '#000';\n    }\n  };\n\n  let forColor = mode === 'dark' ? '#fff' : '#000';\n  let forBg = mode === 'dark' ? '#000' : '#fff';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      bacground: color\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HashLoader, {\n        css: override,\n        color: \"#e23b64\",\n        loading: loading,\n        size: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), \"Loading...\"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        mode: mode,\n        toggleMode: toggleMode,\n        style: {\n          background: forBg,\n          color: forColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          mode: mode,\n          toggleMode: toggleMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TopSlider, {\n                mode: mode,\n                toggleMode: toggleMode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 40\n              }, this), /*#__PURE__*/_jsxDEV(SupriceItem, {\n                mode: mode,\n                toggleMode: toggleMode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Gallery1, {\n                mode: mode,\n                toggleMode: toggleMode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(SpecialItem, {\n                mode: mode,\n                toggleMode: toggleMode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/tour\",\n            element: /*#__PURE__*/_jsxDEV(Tour, {\n              mode: mode,\n              toggleMode: toggleMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/aboutus\",\n            element: /*#__PURE__*/_jsxDEV(AboutUs, {\n              mode: mode,\n              toggleMode: toggleMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/contactus\",\n            element: /*#__PURE__*/_jsxDEV(ContactUs, {\n              mode: mode,\n              toggleMode: toggleMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 47\n            }, this),\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Service, {\n          mode: mode,\n          toggleMode: toggleMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Newsletter, {\n          mode: mode,\n          toggleMode: toggleMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          mode: mode,\n          toggleMode: toggleMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoTop, {\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"g+7RvlAE+s82/BDV7Y5qdyzJwGs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nishant/AVscode/Git/Saranghey/src/App.js"],"names":["Navbar","Footer","TopSlider","SupriceItem","SpecialItem","Newsletter","useState","useEffect","ContactUs","Tour","Gallery1","AboutUs","Service","ScrollToTop","BrowserRouter","Router","Routes","Route","GoTop","LoadingBar","HashLoader","css","override","App","loading","setLoading","setTimeout","color","setColor","mode","setMode","toggleMode","document","body","style","backgroundColor","forColor","forBg","bacground","background"],"mappings":"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","sourcesContent":["import './App.css';\nimport './components/css/component.css';\nimport Navbar from './components/header';\nimport Footer from './components/footer';\nimport TopSlider from './components/topSlider';\nimport SupriceItem from './components/supriceContent';\n// import Gallery2 from './components/Gallery2';\nimport SpecialItem from './components/specialContent';\nimport Newsletter from './components/newsletter';\nimport { useState,useEffect } from 'react';\nimport ContactUs from './components/ContactUs';\nimport Tour from './components/Tour';\nimport Gallery1 from './components/Gallery1';\nimport AboutUs from './components/AboutUs';\nimport Service from './components/Service';\nimport ScrollToTop from './components/ScrollToTopAuto';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport GoTop from './components/GoTopOnclick';\nimport LoadingBar from 'react-top-loading-bar';\nimport HashLoader from \"react-spinners/HashLoader\";\nimport { css } from \"@emotion/react\";\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  justify-content: center;\n  position:relative;\n  top:20rem;\n`;\n\nconst App = () => {\n  // const[progress,setProgress] = useState(0);\n  const [loading,setLoading] = useState(false);\n  \n  useEffect(() =>{\n    setLoading(true);\n\n    setTimeout(() =>{\n     setLoading(false);\n    },6000)\n  },[])\n  let [color, setColor] = useState(\"#ffffff\");\n  {loading ? setColor(\"#000\"):setColor(\"#fff\")}\n\n  const [mode, setMode] = useState('dark');\n  \n  const toggleMode = () => {\n    if (mode === 'dark') {\n      setMode('white');\n      document.body.style.backgroundColor = '#fff';\n    }\n    else {\n      setMode('dark');\n      document.body.style.backgroundColor = '#000';\n    }\n  }\n  let forColor = mode === 'dark' ? '#fff' : '#000';\n  let forBg = mode === 'dark' ? '#000' : '#fff';\n\n  return (\n  \n    <div style={{bacground:color}}>\n      { loading ? (<>\n      <HashLoader css={override} color={\"#e23b64\"} loading={loading} size={50} />\n      Loading...\n      </>) \n      :\n      (<Router>\n        <ScrollToTop />\n        <div className=\"App\" mode={mode} toggleMode={toggleMode} style={{ background: forBg, color: forColor }}>\n          <Navbar mode={mode} toggleMode={toggleMode} />\n      \n          <Routes>\n            <Route path=\"/\" element={<><TopSlider mode={mode} toggleMode={toggleMode} />\n              <SupriceItem mode={mode} toggleMode={toggleMode} />\n              <Gallery1 mode={mode} toggleMode={toggleMode} />\n              <SpecialItem mode={mode} toggleMode={toggleMode} />\n            </>}>\n            </Route>\n            <Route path=\"/tour\" element={<Tour mode={mode} toggleMode={toggleMode} />}></Route>\n            <Route path=\"/aboutus\" element={<AboutUs mode={mode} toggleMode={toggleMode} />}></Route>\n            <Route path=\"/contactus\" element={<ContactUs mode={mode} toggleMode={toggleMode} />}> </Route>\n          </Routes>\n          <Service mode={mode} toggleMode={toggleMode} />\n          <Newsletter mode={mode} toggleMode={toggleMode} />\n          <Footer mode={mode} toggleMode={toggleMode} />\n        </div>\n        <GoTop mode={mode} toggleMode={toggleMode} />\n      </Router>)}\n    \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}